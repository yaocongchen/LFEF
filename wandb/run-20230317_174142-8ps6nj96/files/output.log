----- Training - Epoch 01 - batch_size 2,------
=====> the number of iterations per epoch:  64
=====> epoch[1/150] train_iter: (10/64) 	 loss: 1.111499 acc:0.263720
  0%|                                                                                                                                              | 0/150 [00:00<?, ?it/s]
=====> epoch[1/150] train_iter: (20/64) 	 loss: 1.128149 acc:0.348313
=====> epoch[1/150] train_iter: (30/64) 	 loss: 1.134840 acc:0.182815
=====> epoch[1/150] train_iter: (40/64) 	 loss: 1.111760 acc:0.284628
  0%|                                                                                                                                              | 0/150 [00:04<?, ?it/s]
Traceback (most recent call last):
  File "/home/yaocong/Experimental/light_ssd/train.py", line 257, in <module>
    train(args)
  File "/home/yaocong/Experimental/light_ssd/train.py", line 201, in train
    torchvision.utils.save_image(torch.cat((output_f34,mask_image),0), "./training_data_captures/" +str(iter_val+1)+".jpg")
  File "/home/yaocong/miniconda3/envs/torch/lib/python3.9/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/home/yaocong/miniconda3/envs/torch/lib/python3.9/site-packages/torchvision/utils.py", line 149, in save_image
    ndarr = grid.mul(255).add_(0.5).clamp_(0, 255).permute(1, 2, 0).to("cpu", torch.uint8).numpy()
KeyboardInterrupt
=====> epoch[1/150] train_iter: (60/64) 	 loss: 0.879011 acc:0.383578